#!/data/data/com.termux/files/usr/bin/python3
#!/data/data/com.termux/files/usr/bin/bash
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# üöÄ PROD-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π (Termux/HyperOS)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# Atomic config (readonly)
declare -r LOG_DIR="$HOME/wzbuffer/logs"
declare -r LOCK_FILE="$LOG_DIR/.deploy.lock"
declare -r SCRIPT_PATH="$HOME/wheelzone-script-utils/scripts/notion/wz_notify.sh"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π
mkdir -p "$LOG_DIR" || exit 1
exec 9>"$LOCK_FILE" || exit 1
flock -n 9 || {
	echo "[ERROR] –ü—Ä–æ—Ü–µ—Å—Å —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è"
	exit 1
}

# –ü–æ—Ç–æ–∫–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
	printf '{"ts":"%s","msg":"%s"}\n' "$(date +%s)" "$1" >>"$LOG_DIR/deploy.json" --
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
deploy() {
	log "START"

	# 1. –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
	[ -x "$SCRIPT_PATH" ] || {
		log "ERROR: –°–∫—Ä–∏–ø—Ç –Ω–µ–∏—Å–ø–æ–ª–Ω—è–µ–º"
		return 1
	}

	# 2. –ó–∞–ø—É—Å–∫ —Å –∑–∞–º–µ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
	local start=$EPOCHSECONDS
	if "$SCRIPT_PATH"; then
		log "SUCCESS: –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω ($((EPOCHSECONDS - start))s)"
	else
		log "ERROR: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–∫–æ–¥ $?)"
		return 1
	fi
}

# –í—ã–∑–æ–≤ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
if deploy; then
	log "COMPLETE"
else
	log "FAILED"
	exit 1
fi
