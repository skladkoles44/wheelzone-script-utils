#!/data/data/com.termux/files/usr/bin/bash
# === –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç wz_chatend.sh v3.3 ===

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TEST_DIR="$HOME/wzbuffer/chatend_test"
LOG_FILE="$TEST_DIR/test.log"
SCRIPT_PATH="$HOME/wheelzone-script-utils/scripts/wz_chatend.sh"
INSIGHTS_FILE="$HOME/wzbuffer/tmp_insights.txt"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
init_test() {
    echo "üßπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã..."
    rm -rf "$TEST_DIR"
    mkdir -p "$TEST_DIR"
    
    cat > "$TEST_DIR/main.md" <<'EOM'
# –û—Å–Ω–æ–≤–Ω–æ–π ChatEnd

[[FRACTAL:$HOME/wzbuffer/chatend_test/nested.md]]

TODO:
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–µ–∂–∏–º

DONE:
- –ù–∞—Å—Ç—Ä–æ–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
EOM

    cat > "$TEST_DIR/nested.md" <<'EOM'
# –í–ª–æ–∂–µ–Ω–Ω—ã–π ChatEnd

INSIGHT:
–§—Ä–∞–∫—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
EOM

    cat > "$INSIGHTS_FILE" <<'EOM'
TODO: –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞
DONE: –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç
INSIGHT: –í–∞–∂–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
EOM

    : > "$LOG_FILE"
}

check_dependencies() {
    local missing=()
    [[ ! -f "$SCRIPT_PATH" ]] && missing+=("–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç wz_chatend.sh")
    ! command -v uuidgen >/dev/null && missing+=("uuidgen")
    if [[ ${#missing[@]} -gt 0 ]]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        printf "  - %s\n" "${missing[@]}"
        exit 1
    fi
}

check_created_files() {
    local pattern="$1"
    local min_count="${2:-1}"
    local files=()
    mapfile -t files < <(find "$HOME/wz-wiki/WZChatEnds" -name "$pattern" -mmin -5 2>/dev/null)
    if [[ ${#files[@]} -lt $min_count ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: —Å–æ–∑–¥–∞–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∞–π–ª–æ–≤ (${#files[@]} –∏–∑ $min_count)"
        return 1
    fi
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${#files[@]}"
    return 0
}

run_tests() {
    local errors=0
    echo -e "\nüîµ –¢–µ—Å—Ç 1/3: –§—Ä–∞–∫—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"
    if ! bash "$SCRIPT_PATH" --fractal "$TEST_DIR/main.md" 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"
        ((errors++))
    elif grep -q "‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª" "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª"
        ((errors++))
    else
        echo "‚úÖ –§—Ä–∞–∫—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        check_created_files "fractal-*.md" 2 || ((errors++))
    fi

    echo -e "\nüü¢ –¢–µ—Å—Ç 2/3: –ê–≤—Ç–æ—Ä–µ–∂–∏–º"
    if ! bash "$SCRIPT_PATH" --auto 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∞–≤—Ç–æ—Ä–µ–∂–∏–º–µ"
        ((errors++))
    else
        echo "‚úÖ –ê–≤—Ç–æ—Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω"
        check_created_files "2025-*.md" 1 || ((errors++))
    fi

    echo -e "\nüü£ –¢–µ—Å—Ç 3/3: Telegram-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
    if ! bash "$SCRIPT_PATH" --tg-test 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ Telegram-—Ç–µ—Å—Ç–∞"
        ((errors++))
    elif grep -q "ERROR" "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram"
        ((errors++))
    else
        echo "‚úÖ Telegram-—Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω"
    fi

    return $errors
}

git_sync() {
    echo -e "\nüîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Git..."
    cd ~/wheelzone-script-utils || return 1
    if [[ -n $(git status --porcelain) ]]; then
        git add .
        git commit -m "[Test] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è $(date +%Y-%m-%d)"
        git pull --rebase
        git push
    else
        echo "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    fi
}

main() {
    echo "üîß –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ wz_chatend.sh"
    echo "üìù –õ–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $LOG_FILE"
    check_dependencies
    init_test
    local start_time=$(date +%s)
    run_tests
    local test_result=$?
    local end_time=$(date +%s)
    echo -e "\nüìä –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "  - –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $((end_time - start_time)) —Å–µ–∫"
    echo "  - –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—à–∏–±–æ–∫: $test_result"
    if [[ $test_result -eq 0 ]]; then
        echo -e "\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    else
        echo -e "\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ç–µ—Å—Ç–∞—Ö"
    fi
    git_sync
}

main
