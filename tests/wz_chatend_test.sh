#!/data/data/com.termux/files/usr/bin/bash
# === –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç wz_chatend.sh v3.2 ===

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
find_script_path() {
    local possible_paths=(
        "$HOME/wheelzone-script-utils/scripts/chatend/wz_chatend.sh"
        "$HOME/wheelzone-script-utils/scripts/wz_chatend.sh"
    )
    
    for path in "${possible_paths[@]}"; do
        if [[ -f "$path" ]]; then
            echo "$path"
            return 0
        fi
    done
    
    echo "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ wz_chatend.sh!" >&2
    return 1
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TEST_DIR="$HOME/wzbuffer/chatend_test"
LOG_FILE="$TEST_DIR/test.log"
SCRIPT_PATH=$(find_script_path)
INSIGHTS_FILE="$HOME/wzbuffer/tmp_insights.txt"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—à–ª–∏ —Å–∫—Ä–∏–ø—Ç
if [[ ! -f "$SCRIPT_PATH" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!" >&2
    exit 1
fi

init_test() {
    rm -rf "$TEST_DIR"
    mkdir -p "$TEST_DIR"
    : > "$LOG_FILE"
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
    cat > "$TEST_DIR/main.md" <<EOF_MAIN
# –û—Å–Ω–æ–≤–Ω–æ–π ChatEnd

[[FRACTAL:$TEST_DIR/nested.md]]

TODO:
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã
- –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç Telegram

DONE:
- –°–æ–∑–¥–∞–Ω –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç
EOF_MAIN

    cat > "$TEST_DIR/nested.md" <<EOF_NESTED
# –í–ª–æ–∂–µ–Ω–Ω—ã–π ChatEnd

INSIGHT:
–ù—É–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
EOF_NESTED

    # –î–ª—è --auto —Ä–µ–∂–∏–º–∞
    cat > "$INSIGHTS_FILE" <<EOF_AUTO
TODO: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞
DONE: –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ç–µ—Å—Ç
INSIGHT: –í–∞–∂–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
EOF_AUTO
}

test_fractal() {
    echo -e "\nüîµ –¢–µ—Å—Ç–∏—Ä—É–µ–º --fractal" | tee -a "$LOG_FILE"
    if ! bash "$SCRIPT_PATH" --fractal "$TEST_DIR/main.md" 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ --fractal —Ä–µ–∂–∏–º–µ" | tee -a "$LOG_FILE"
        return 1
    fi
    return 0
}

test_auto() {
    echo -e "\nüü¢ –¢–µ—Å—Ç–∏—Ä—É–µ–º --auto" | tee -a "$LOG_FILE"
    if ! bash "$SCRIPT_PATH" --auto 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ --auto —Ä–µ–∂–∏–º–µ" | tee -a "$LOG_FILE"
        return 1
    fi
    return 0
}

test_telegram() {
    echo -e "\nüü£ –¢–µ—Å—Ç–∏—Ä—É–µ–º --tg-test" | tee -a "$LOG_FILE"
    echo "–¢–µ–ª–µ–≥—Ä–∞–º —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω –≤ $(date)" >> "$LOG_FILE"
    if bash "$SCRIPT_PATH" --tg-test 2>&1 | tee -a "$LOG_FILE"; then
        echo "Telegram test completed" >> "$LOG_FILE"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ Telegram-—Ç–µ—Å—Ç–∞" | tee -a "$LOG_FILE"
        return 1
    fi
}

check_results() {
    local error_count=0
    
    echo -e "\nüìú –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" | tee -a "$LOG_FILE"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    echo -e "\nüìÇ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" | tee -a "$LOG_FILE"
    local created_files=$(find "$HOME/wz-wiki/WZChatEnds" -name "*.md" -mmin -5 2>/dev/null | wc -l)
    if (( created_files < 2 )); then
        echo "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Ñ–∞–π–ª–æ–≤ ($created_files)" | tee -a "$LOG_FILE"
        ((error_count++))
    else
        find "$HOME/wz-wiki/WZChatEnds" -name "*.md" -mmin -5 -ls | tee -a "$LOG_FILE"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
    local log_errors=$(grep -ci "error\|fail\|warning" "$LOG_FILE")
    if (( log_errors > 0 )); then
        echo -e "\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ $log_errors –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö" | tee -a "$LOG_FILE"
        grep -i "error\|fail\|warning" "$LOG_FILE" | tee -a "$LOG_FILE"
        ((error_count++))
    fi
    
    return $error_count
}

git_sync() {
    echo -e "\nüîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Git..." | tee -a "$LOG_FILE"
    cd ~/wheelzone-script-utils || {
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" | tee -a "$LOG_FILE"
        return 1
    }

    COMMIT_MSG="‚úÖ ChatEnd —Ç–µ—Å—Ç: —Ñ–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–¥ —Å–∏–Ω–∫–æ–º"

    if ! git diff --quiet || ! git diff --cached --quiet; then
        echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äî –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–º–∏—Ç..." | tee -a "$LOG_FILE"
        git add -A
        if git diff --cached --name-only | grep -q .; then
            git commit -m "$COMMIT_MSG"
        else
            echo "‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –ø–æ—Å–ª–µ git add -A" | tee -a "$LOG_FILE"
        fi
    else
        echo "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞" | tee -a "$LOG_FILE"
    fi

    if ! git pull --rebase 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ git pull (–≤–æ–∑–º–æ–∂–Ω–æ, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã)" | tee -a "$LOG_FILE"
        return 1
    fi

    if ! git push 2>&1 | tee -a "$LOG_FILE"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ git push" | tee -a "$LOG_FILE"
        return 1
    fi

    echo "‚úÖ Git —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ" | tee -a "$LOG_FILE"
    return 0
}

main() {
    init_test
    echo "üîß –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." | tee -a "$LOG_FILE"
    echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å–∫—Ä–∏–ø—Ç: $SCRIPT_PATH" | tee -a "$LOG_FILE"

    test_fractal
    test_auto
    test_telegram

    if check_results; then
        echo -e "\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" | tee -a "$LOG_FILE"
    else
        echo -e "\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ç–µ—Å—Ç–∞—Ö" | tee -a "$LOG_FILE"
    fi
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Git
    if git_sync; then
        echo "üîÑ Git —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ" | tee -a "$LOG_FILE"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Git" | tee -a "$LOG_FILE"
    fi
}

main
