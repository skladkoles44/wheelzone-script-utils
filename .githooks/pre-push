#!/data/data/com.termux/files/usr/bin/bash
set -Eeuo pipefail

REPO_ROOT="$(git rev-parse --show-toplevel)"
cd "$REPO_ROOT"

# shellcheck disable=SC1091
source ".wz/fractal_uuid_utils.sh" || { echo "[WZ][WARN] utils missing"; exit 0; }

SCOPE="${WZ_PREPUSH_SCOPE:-changed}"   # changed|all
AUTOFIX="${WZ_PREPUSH_AUTOFIX:-1}"     # 1 = автофикс
ext_re="$(printf '(%s)$' "$(echo "$TARGET_EXT" | sed 's/ /|/g')")"

list_changed(){
  git diff --cached --name-only --diff-filter=ACMRT | grep -Ei "\.${ext_re}" || true
}
list_all(){
  git ls-files | grep -Ei "\.${ext_re}" || true
}
collect_targets(){
  case "$SCOPE" in all) list_all ;; *) list_changed ;; esac | awk 'NF'
}

missing=()
while IFS= read -r f; do
  [ -f "$f" ] || continue
  path_ignored "$f" && continue
  has_uuid_in_frontmatter "$f" || missing+=( "$f" )
done < <(collect_targets)

if [ "${#missing[@]}" -eq 0 ]; then
  exit 0
fi

printf '[WZ][FAIL] Missing fractal_uuid in %d file(s):\n' "${#missing[@]}"
printf '%s\n' "${missing[@]}"

if [ "$AUTOFIX" = "1" ]; then
  echo "[WZ] Автофикс фронтматтера…"
  ensure_files_have_uuid "${missing[@]}"
  echo "[WZ] Коммит с фиксом создан. Повтори: git push"
fi

exit 1
